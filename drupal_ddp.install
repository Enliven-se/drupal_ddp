<?php
/**
 * @file
 * Drupal DDP uninstall file.
 */

/**
 * Implements hook_uninstall().
 */
function drupal_ddp_uninstall() {
  variable_del('drupal_ddp_settings_ddp_server_url');
  variable_del('drupal_ddp_settings_enabled_types');
  variable_del('drupal_ddp_settings_meteor_host_url');
  variable_del('drupal_ddp_settings_meteor_socket');
  variable_del('drupal_ddp_node_server_status');
  variable_del('drupal_ddp_meteor_status');
  variable_del('drupal_ddp_restws_status');

  // Get all available content types.
  $content_types = node_type_get_types();

  // Delete variables that have been set up for content types.
  foreach ($content_types as $key => $type) {
    if (variable_get('drupal_ddp_enabled_' . $key, 0) == 1) {
      variable_del('drupal_ddp_enabled_' . $key);
      if (variable_get('additional_settings__active_tab_' . $key, 0) == 'edit-drupal-ddp') {
        variable_del('additional_settings__active_tab_' . $key);
      }
    }
  }
}

/**
 * Add tables required for tracking sync states.
 */
function drupal_ddp_update_7001() {
  $schema['drupal_ddp_sync_node'] = array(
    'description' => 'Drupal DDP node sync table.',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a node.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'last_attempted_sync' => array(
        'description' => 'The last time (UNIX Timestamp) that a node attempted to sync.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sync_successful' => array(
        'description' => 'Whether or not the node successfully synced. 0 = false, 1 = true.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'last_successful_sync' => array(
        'description' => 'Time (UNIX Timestamp) of last successful sync.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['drupal_ddp_sync_user'] = array(
    'description' => 'Drupal DDP user sync table.',
    'fields' => array(
      'uid' => array(
        'description' => 'The primary identifier for a user.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'last_attempted_sync' => array(
        'description' => 'The last time (UNIX Timestamp) that a user attempted to sync.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sync_successful' => array(
        'description' => 'Whether or not the user successfully synced.  0 = false, 1 = true.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'last_successful_sync' => array(
        'description' => 'Time (UNIX Timestamp) of last successful sync.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('uid'),
  );

  $schema['drupal_ddp_sync_taxonomy'] = array(
    'description' => 'Drupal DDP taxonomy sync table.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary identifier for a taxonomy term.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'last_attempted_sync' => array(
        'description' => 'The last time (UNIX Timestamp) that a taxonomy term attempted to sync.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sync_successful' => array(
        'description' => 'Whether or not the taxonomy term successfully synced. 0 = false, 1 = true.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'last_successful_sync' => array(
        'description' => 'Time (UNIX Timestamp) of last successful sync.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('tid'),
  );

  db_create_table('drupal_ddp_sync_node', $schema['drupal_ddp_sync_node']);
  db_create_table('drupal_ddp_sync_user', $schema['drupal_ddp_sync_user']);
  db_create_table('drupal_ddp_sync_taxonomy', $schema['drupal_ddp_sync_taxonomy']);
}

/**
 * Implements hook_schema().
 */
function drupal_ddp_schema() {
  $schema['drupal_ddp_sync_node'] = array(
    'description' => 'Drupal DDP node sync table.',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a node.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'last_attempted_sync' => array(
        'description' => 'The last time (UNIX Timestamp) that a node attempted to sync.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sync_successful' => array(
        'description' => 'Whether or not the node successfully synced. 0 = false, 1 = true.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'last_successful_sync' => array(
        'description' => 'Time (UNIX Timestamp) of last successful sync.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['drupal_ddp_sync_user'] = array(
    'description' => 'Drupal DDP user sync table.',
    'fields' => array(
      'uid' => array(
        'description' => 'The primary identifier for a user.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'last_attempted_sync' => array(
        'description' => 'The last time (UNIX Timestamp) that a user attempted to sync.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sync_successful' => array(
        'description' => 'Whether or not the user successfully synced.  0 = false, 1 = true.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'last_successful_sync' => array(
        'description' => 'Time (UNIX Timestamp) of last successful sync.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('uid'),
  );

  $schema['drupal_ddp_sync_taxonomy'] = array(
    'description' => 'Drupal DDP taxonomy sync table.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary identifier for a taxonomy term.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'last_attempted_sync' => array(
        'description' => 'The last time (UNIX Timestamp) that a taxonomy term attempted to sync.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sync_successful' => array(
        'description' => 'Whether or not the taxonomy term successfully synced. 0 = false, 1 = true.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'last_successful_sync' => array(
        'description' => 'Time (UNIX Timestamp) of last successful sync.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('tid'),
  );

  return $schema;
}
